FUNCTION_BLOCK "fb_D-Control_V18.0.1"
TITLE = D-Regler
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : sf
FAMILY : XXX
VERSION : 1.0
   VAR_INPUT 
      ir_SetpointDiverence { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;   // SollstwertDiverenz
      ir_DifferentialGain { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real := 1.0e+0;   // Differenzial-Verstärkung
      itime_DifferezialActionTime { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Time;   // Differenzial-Haltezeit
      ib_Reset { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool := FALSE;   // Reset
   END_VAR

   VAR_OUTPUT 
      or_Output { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;   // Reglerantwort
   END_VAR

   VAR 
      Intermediate_value { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;
      PastTime { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Real;   // in s
      StaticCycleTime_Aux { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : LReal;
   END_VAR

   VAR_TEMP 
      HoldingTime : Real;   // in s
   END_VAR


BEGIN
	#PastTime := LREAL_TO_REAL(RUNTIME(#StaticCycleTime_Aux));
	#HoldingTime := DINT_TO_REAL(TIME_TO_DINT(#itime_DifferezialActionTime)) * 0.001;
	IF #itime_DifferezialActionTime = t#0s OR #ib_Reset THEN
	    #Intermediate_value := 0;
	    #or_Output := 0;
	ELSE
	    IF #PastTime > 0 AND #PastTime < 0.1 THEN
	        #Intermediate_value += (#ir_SetpointDiverence - #Intermediate_value) * #PastTime / #HoldingTime;
	    END_IF;
	    #or_Output := (#ir_SetpointDiverence - #Intermediate_value) * #ir_DifferentialGain ;
	END_IF;
END_FUNCTION_BLOCK

